// SERVERLESS
section.slide--horizontal.slide--theme1(data-transition='fade-out')
  .bg-gradient-blue.white.h-100.flcnw.flc
    .f-subheadline.lh-title.mh4.ph6 How is that "serverless"?

// Building blocks
section.slide--horizontal
  .h-100.flcnw.pa3
    .fln.f1.lh-title.tl.b APIs as building blocks
    .fla.flrnw
      .fln.w-two-thirds.flc
        .f-subheadline
          .db Each block 
            .di.b.algolia-blue solves
          .db a specific problem
      .fln.w-third.flcnw.flc
        img.h-100(src='./img/building-blocks.png')
    aside.notes
      p Serverless we use APIs
      p Each API solves a specific problem
      p Those problems are not new, already solved
      p Gain time, focus on your added value

// Existing ecosystem
section.slide--horizontal
  .h-100.flcnw.pa3
    .fln.f1.lh-title.tl.b SaaS ecosystem
    .fla.h-100.relative
      +brick(4, 6, $algolia-blue)
    aside.notes
      p All those problems are easy to solve at first
      p Then, the complexity is exponential at scale
      p You don't want to spend more time handling emails, paiment, etc
      p Those problems are their own domain of expertise
      p But those problems are partly solved
      p Just go with the packaged best practices and focus on your product
      p we are the search brick


section Building blocks, one API to do one thing (logos of each company)
  // Cloudinary, Stripe, Auth0, Netlify, Twilio, Mailjet, PubNub
section each is a specific problem, own domain of expertise, solved
section We are the search brick. We are expert, so you don't have to
section ML? Image search? Voice recognition? Nope, but make it possible to plug APIs that do it
// section bring search to a world that could not have it (SSG)

